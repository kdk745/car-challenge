definitions:
  Car:
    title: Car
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier representing a specific car
      make:
        type: string
        description: Make of the car
      model:
        type: string
        description: Package of the car
      package:
        type: string
        description: Model of the car
      color:
        type: string
        description: Color of the car
      year:
        type: integer
        description: Year of the car
      category:
        type: string
        description: Category of the car
      mileage:
        type: integer
        description: Mileage of the car
      price:
        type: integer
        description: Price of the car
  NewCar:
    title: NewCar
    type: object
    properties:
      make:
        type: string
        description: Make of the car
      model:
        type: string
        description: Package of the car
      package:
        type: string
        description: Model of the car
      color:
        type: string
        description: Color of the car
      year:
        type: integer
        description: Year of the car
      category:
        type: string
        description: Category of the car
      mileage:
        type: integer
        description: Mileage of the car
      price:
        type: integer
        description: Price of the car
  Error:
    title: Error
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  ServerError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: ServerError
  NotFoundError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: NotFoundError
  ValidationError:
    allOf:
      - $ref: '#/definitions/Error'
      - title: ValidationError
      - properties:
          details:
            type: array
            items:
              title: FieldError
              type: object
              properties:
                message:
                  type: string
                param:
                  type: string

/cars:
  get:
    summary: List all cars
    description: Returns cars
    produces:
      - application/json
    tags:
      - Cars
    responses:
      200:
        description: An array of cars
        schema:
          title: Cars
          type: array
          items:
            $ref: '#/definitions/Car'
  post:
    summary: Create a new car
    description: Create a car
    produces:
      - application/json
    tags:
      - Cars
    parameters:
      - name: CarParams
        description: POST params for a car
        in: body
        required: true
        schema:
          $ref: '#/definitions/NewCar'
    responses:
      201:
        description: Newly created car object
        schema:
          title: Car
          type: object
          $ref: '#/definitions/Car'
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

/cars/{id}:
  get:
    summary: Get an car
    description: Get car information
    produces:
      - application/json
    tags:
      - Cars
    parameters:
      - name: id
        description: Unique identifier of the car
        in: path
        required: true
        type: integer
    responses:
      200:
        description: Car object
        schema:
          title: Car
          type: object
          $ref: '#/definitions/Car'
      404:
        description: Car not found
        schema:
          $ref: '#/definitions/NotFoundError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

  put:
    summary: Update an car
    description: Update an car
    produces:
      - application/json
    tags:
      - Cars
    parameters:
      - name: id
        description: Unique identifier of the car
        in: path
        required: true
        type: integer
    responses:
      200:
        description: Updated car object
        schema:
          title: UpdatedCar
          type: object
          properties:
            id:
              type: integer
              description: Unique identifier representing a specific car
            make:
              type: string
              description: Make of the car
            model:
              type: string
              description: Package of the car
            package:
              type: string
              description: Model of the car
            color:
              type: string
              description: Color of the car
            year:
              type: integer
              description: Year of the car
            category:
              type: string
              description: Category of the car
            mileage:
              type: integer
              description: Mileage of the car
            price:
              type: integer
              description: Price of the car
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      404:
        description: Car not found
        schema:
          $ref: '#/definitions/NotFoundError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'

  delete:
    summary: Delete an car
    description: Delete an car
    produces:
      - application/json
    tags:
      - Cars
    parameters:
      - name: id
        description: Unique identifier of the car
        in: path
        required: true
        type: integer
    responses:
      204:
        description: Car deleted (no-content)
      400:
        description: Bad request
        schema:
          $ref: '#/definitions/ValidationError'
      404:
        description: Car not found
        schema:
          $ref: '#/definitions/NotFoundError'
      500:
        description: Internal server error
        schema:
          $ref: '#/definitions/ServerError'
